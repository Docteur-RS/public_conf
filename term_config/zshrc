# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/docteur/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-syntax-highlighting zsh-autosuggestions z scd history)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"




# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias lc='colorls'
alias k='kubectl'
alias ks='kubectl-sops'
alias kf='kubectl apply -f'
alias kdf='kubectl delete -f'
alias ls='ls --color'
alias kgn='kubectl get namespaces'
alias kdn='kubectl delete namespaces'
alias kgp='kubectl get po'
alias kdp='kubectl delete po'
alias kgs='kubectl get svc'
alias kds='kubectl delete svc'
alias kgd='kubectl get deployments'
alias kdd='kubectl delete deployments'
alias kgi='kubectl get ingress'
alias kdi='kubectl delete ingress'
alias kgr='kubectl get role'
alias kdr='kubectl delete role'
alias kgrb='kubectl get rolebinding'
alias kdrb='kubectl delete rolebinding'
alias kgcr='kubectl get clusterrole'
alias kdcr='kubectl delete clusterrole'
alias kgcrb='kubectl get clusterrolebinding'
alias kdcrb='kubectl delete clusterrolebinding'
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %d -%Cblue %s%Creset %Cgreen(%ar) %Cblue<%an>%Creset' --abbrev-commit --date=relative"
alias em='emacs'
alias fire='cacafire'

alias sshfs_co='cd ~/ && sudo sshfs <username>@<ip>:/home/<unsername>/workspace ./workspace -o transform_symlinks,allow_other,kernel_cache -C && cd -'
alias sshfs_deco='cd ~/ && sudo fusermount -zu ./workspace && cd -'
alias sshfs_reco='cd ~/ && sudo fusermount -zu ./workspace ; sudo sshfs <username>@<ip>:/home/<username>/workspace ./workspace -o transform_symlinks,allow_other,kernel_cache -C && cd -'
alias ggit='lazygit'
alias rich='python3 -m rich'
alias boot_docker='echo FYI "https://github.com/microsoft/WSL/issues/4285#issuecomment-1180567785" ; sudo service docker start'
alias watch='watch '

kexec()
{
 kubectl exec -it $1 /bin/bash $2 $3
}

function cd {
    builtin cd "$@" && colorls
}

function cypher_inplace {
    sops --encrypt --in-place --age $(cat ~/.sops/key.txt |grep -oP "public key: \K(.*)") $2 $3 $1
}

function cypher {
    filename=$(basename -- "$1")
    extension="${filename##*.}"
    filename="${filename%.*}"
    sops --encrypt --age $(cat ~/.sops/key.txt |grep -oP "public key: \K(.*)") $2 $3 $1 > "$filename.enc.$extension"
}

function ksf {
    sops -d --age $(cat ~/.sops/key.txt |grep -oP 'public key: \K(.*)') $1 |kubectl apply -f -
}

function kdsf {
    sops -d --age $(cat ~/.sops/key.txt |grep -oP 'public key: \K(.*)') $1 |kubectl delete -f -
}

function kdel {
     k get $1 -n $2 | grep "$3" | awk '{print $1}' | xargs -I {} kubectl delete $1 {} -n $2 --force --grace-period 0
}

function klogs {
    kubectl logs $(kubectl get po | grep "$1" | awk '{print $1}') -n $2
}

function dontstop {
  while true; do eval "$@" ; sleep 2; done
}
source /home/docteur/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
complete -F __start_kubectl k

source <(kubectl completion zsh)

export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export PATH=$PATH:/usr/local/go/bin
export SOPS_AGE_KEY_FILE=$HOME/.sops/key.txt
export EDITOR=emacs
export XDG_CONFIG_HOME=$HOME/.config
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0


# Created by `pipx` on 2022-09-15 13:47:49
export PATH="$PATH:/home/docteur/.local/bin"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/docteur/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/docteur/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/docteur/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/docteur/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

